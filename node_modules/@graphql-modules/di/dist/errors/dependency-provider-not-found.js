"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var __1 = require("..");
var DependencyProviderNotFoundError = /** @class */ (function (_super) {
    tslib_1.__extends(DependencyProviderNotFoundError, _super);
    function DependencyProviderNotFoundError(_dependency, _dependent, _moduleName) {
        var _this = _super.call(this, "\n      GraphQL-Modules Error: Dependency Provider Not Found!\n      - Provider #" + __1.getServiceIdentifierName(_dependency) + " couldn't be injected into Provider #" + __1.getServiceIdentifierName(_dependent) + "\n      -- Provider #" + __1.getServiceIdentifierName(_dependency) + " is not provided in #Module " + _moduleName + " scope!\n\n      Possible solutions:\n      - Make sure you have imported the module of Provider #" + __1.getServiceIdentifierName(_dependency) + " in the module of Provider #" + __1.getServiceIdentifierName(_dependent) + "\n  ") || this;
        _this._dependency = _dependency;
        _this._dependent = _dependent;
        _this._moduleName = _moduleName;
        Object.setPrototypeOf(_this, DependencyProviderNotFoundError.prototype);
        Error.captureStackTrace(_this, DependencyProviderNotFoundError);
        return _this;
    }
    Object.defineProperty(DependencyProviderNotFoundError.prototype, "dependency", {
        get: function () {
            return this._dependency;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DependencyProviderNotFoundError.prototype, "dependent", {
        get: function () {
            return this._dependent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DependencyProviderNotFoundError.prototype, "moduleName", {
        get: function () {
            return this._moduleName;
        },
        enumerable: true,
        configurable: true
    });
    return DependencyProviderNotFoundError;
}(Error));
exports.DependencyProviderNotFoundError = DependencyProviderNotFoundError;
//# sourceMappingURL=dependency-provider-not-found.js.map