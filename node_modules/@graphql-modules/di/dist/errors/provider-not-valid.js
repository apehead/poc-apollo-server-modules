"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var __1 = require("..");
var ProviderNotValidError = /** @class */ (function (_super) {
    tslib_1.__extends(ProviderNotValidError, _super);
    function ProviderNotValidError(_moduleName, _serviceIdentifier) {
        var _this = _super.call(this, "\n      GraphQL-Modules Error: Provider is not valid!\n      - #Module #" + _moduleName + " provides an invalid #Provider #" + __1.getServiceIdentifierName(_serviceIdentifier) + "!\n\n      Possible solutions:\n      - Provider must be a class itself,\n        or provides a valid identifier with 'useValue', 'useFactory' or 'useClass'.\n    ") || this;
        _this._moduleName = _moduleName;
        _this._serviceIdentifier = _serviceIdentifier;
        Object.setPrototypeOf(_this, ProviderNotValidError.prototype);
        Error.captureStackTrace(_this, ProviderNotValidError);
        return _this;
    }
    Object.defineProperty(ProviderNotValidError.prototype, "moduleName", {
        get: function () {
            return this._moduleName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProviderNotValidError.prototype, "serviceIdentifier", {
        get: function () {
            return this._serviceIdentifier;
        },
        enumerable: true,
        configurable: true
    });
    return ProviderNotValidError;
}(Error));
exports.ProviderNotValidError = ProviderNotValidError;
//# sourceMappingURL=provider-not-valid.js.map