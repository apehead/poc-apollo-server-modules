"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ModuleSessionInfo = /** @class */ (function () {
    function ModuleSessionInfo(_module, _session) {
        this._module = _module;
        this._session = _session;
        this.injector.provide({
            provide: ModuleSessionInfo,
            useValue: this,
        });
    }
    Object.defineProperty(ModuleSessionInfo.prototype, "module", {
        get: function () {
            return this._module;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "session", {
        get: function () {
            return this._session;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "cache", {
        get: function () {
            return this.module.cache;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "context", {
        get: function () {
            return this.module.getModuleNameContextMap(this.session).get(this.module.name);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "injector", {
        get: function () {
            return this.module.injector.getSessionInjector(this.session);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "config", {
        get: function () {
            return this.module.config;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModuleSessionInfo.prototype, "name", {
        get: function () {
            return this.module.name;
        },
        enumerable: true,
        configurable: true
    });
    ModuleSessionInfo.prototype.callSessionHook = function (serviceIdentifier) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var instance;
            return tslib_1.__generator(this, function (_a) {
                instance = this.injector.get(serviceIdentifier);
                if (instance &&
                    typeof instance !== 'string' &&
                    typeof instance !== 'number') {
                    if ('onRequest' in instance) {
                        return [2 /*return*/, instance.onRequest(this)];
                    }
                    if ('initialize' in instance) {
                        return [2 /*return*/, instance['initialize'](this)];
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    return ModuleSessionInfo;
}());
exports.ModuleSessionInfo = ModuleSessionInfo;
//# sourceMappingURL=module-session-info.js.map